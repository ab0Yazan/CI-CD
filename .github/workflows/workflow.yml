name: test

on:
  push:
    branches: ["main"]

env:
  API_IMAGE: yazona/first-api:${{ github.sha }}
  SCHEDULER_IMAGE: yazona/first-scheduler:${{ github.sha }}
  WORKER_IMAGE: yazona/first-worker:${{ github.sha }}
  NGINX_IMAGE: yazona/first-nginx:${{ github.sha }}
  PROXY_IMAGE: yazona/first-proxy:${{ github.sha }}
  MYSQL_IMAGE: yazona/first-mysql:${{ github.sha }}
  FRONTEND_IMAGE: yazona/first-frontend:${{ github.sha }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

jobs:
  build-backend-images:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create .env file
        run: echo "${{ secrets.LARAVEL_ENV }}" > ./api/.env


      - name: run test
        run: |
         docker compose -f docker-compose.ci.yml up -d
         docker compose -f docker-compose.ci.yml exec -T api php artisan test
         
      - name: Build Docker images
        run: |
          docker build -t $API_IMAGE --target=api -f ./api/Dockerfile --build-arg user=laravel --build-arg uid=1000 .
          docker build -t $SCHEDULER_IMAGE --target=scheduler -f ./api/Dockerfile --build-arg user=laravel --build-arg uid=1000 .
          docker build -t $WORKER_IMAGE --target=worker -f ./api/Dockerfile --build-arg user=laravel --build-arg uid=1000 .

      - name: Run PHPStan
        run: docker run --rm -t $API_IMAGE ./vendor/bin/phpstan analyze --memory-limit=1G

      # - name: Run PHP Insights
      #   run: docker run --rm -t $API_IMAGE php artisan insights --no-interaction \
      #     --min-quality=90 --min-complexity=90 --min-architecture=90 --min-style=90 \
      #     --ansi --format=github-action



      - name: Build scheduler image
        run: docker build -t $SCHEDULER_IMAGE --target=scheduler --build-arg user=laravel --build-arg uid=1000 -f ./api/Dockerfile .

      - name: Build worker image
        run: docker build -t $WORKER_IMAGE --target=worker --build-arg user=laravel --build-arg uid=1000 -f ./api/Dockerfile .

      - name: Build nginx image
        run: docker build -t $NGINX_IMAGE -f ./api/Dockerfile.nginx .

      - name: Build frontend image
        run: docker build -t $FRONTEND_IMAGE --target=prod -f ./frontend/Dockerfile .

      - name: Build proxy image
        run: docker build -t $PROXY_IMAGE -f ./Dockerfile.proxy .

      - name: push api image
        run: docker push $API_IMAGE

      - name: push nginx image
        run: docker push $NGINX_IMAGE

      - name: push mysql image
        run: docker push $MYSQL_IMAGE

      - name: push frontend image
        run: docker push $FRONTEND_IMAGE

      - name: push worker image
        run: docker push $WORKER_IMAGE

      - name: push scheduler image
        run: docker push $SCHEDULER_IMAGE

      - name: push proxy image
        run: docker push $PROXY_IMAGE
